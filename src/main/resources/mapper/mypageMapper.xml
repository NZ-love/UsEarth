<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.usearth.mapper.MyPageMapper">
    <select id="selectCar" resultType="reserveCarVO">
        SELECT ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_REGISTER_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE
        FROM TBL_VISIT_BOOKING
        WHERE USER_ID=#{userId}
        ORDER BY VISIT_BOOKING_REGISTER_DATE
    </select>

    <insert id="insertCar">
        INSERT INTO TBL_VISIT_BOOKING(ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE, USER_ID,APARTMENT_ID)
        VALUES (SEQ_VISIT_RESERVATION.NEXTVAL, TO_DATE(#{visitBookingStartDate}, 'YYYY-MM-DD'), TO_DATE(#{visitBookingEndDate}, 'YYYY-MM-DD'), #{visitBookingPurpose}, #{visitBookingCarNumber}, #{visitBookingCarType}, #{userId}, #{apartmentId})
    </insert>

    <select id="selectComplain" resultType="complainDTO">
        SELECT C.ID, C.USER_ID, C.CATEGORY_COMPLAIN_ID, C.COMPLAIN_TITLE, C.COMPLAIN_CONTENT, C.COMPLAIN_DATE, C.COMPLAIN_STATUS, CC.CATEGORY_COMPLAIN_NAME,C.COMPLAIN_STATUS
        FROM TBL_COMPLAIN C
        JOIN TBL_CATEGORY_COMPLAIN CC ON C.CATEGORY_COMPLAIN_ID = CC.ID
        WHERE C.USER_ID = #{userId}
        ORDER BY C.COMPLAIN_DATE DESC
    </select>

    <select id="selectFree" resultType="postVO">
        SELECT ID,USER_ID,POST_Title,POST_CONTENT,POST_WRITE_DATE,POST_VIEW_COUNT,POST_STATUS,POST_LIKE_COUNT,POST_CATEGORY,POST_MODIFY_DATE
        FROM TBL_POST
        WHERE POST_CATEGORY='자유' AND USER_ID=#{userId}
        ORDER BY POST_MODIFY_DATE DESC
    </select>

    <select id="selectRecycle" resultType="postVO">
        SELECT ID,USER_ID,POST_Title,POST_CONTENT,POST_WRITE_DATE,POST_VIEW_COUNT,POST_STATUS,POST_LIKE_COUNT,POST_CATEGORY,POST_MODIFY_DATE
        FROM TBL_POST
        WHERE POST_CATEGORY='재활용' AND USER_ID=#{userId}
        ORDER BY POST_MODIFY_DATE DESC
    </select>

    <select id="selectReply" resultType="commentDTO">
        SELECT
        C.ID AS COMMENT_ID, C.USER_ID, C.POST_ID, C.PARENT_COMMENT_ID, C.COMMENT_WRITE_DATE, C.COMMENT_CONTENT,C.COMMENT_UPDATE_DATE,
        P.ID AS POST_ID, P.USER_ID AS POST_USER_ID, P.POST_TITLE, P.POST_CONTENT, P.POST_WRITE_DATE,P.POST_CATEGORY,
         U.USER_NAME
        FROM TBL_COMMENT C
        JOIN TBL_USER U ON C.USER_ID = U.ID
        JOIN TBL_POST P ON C.POST_ID = P.ID
        WHERE U.ID = #{userId}
        ORDER BY C.COMMENT_UPDATE_DATE DESC
    </select>

    <insert id="insertComplain">
        INSERT INTO TBL_COMPLAIN(ID, USER_ID, CATEGORY_COMPLAIN_ID, COMPLAIN_TITLE, COMPLAIN_CONTENT)
        VALUES (SEQ_COMPLAIN.NEXTVAL, #{userId}, #{categoryComplainId}, #{complainTitle}, #{complainContent})
    </insert>

    <select id="selectName" resultType="Long">
        SELECT ID,CATEGORY_COMPLAIN_NAME  FROM TBL_CATEGORY_COMPLAIN
        WHERE CATEGORY_COMPLAIN_NAME=#{categoryComplainName}
    </select>

    <select id="selectUserId" resultType="Long">
        SELECT APARTMENT_ID  FROM TBL_USER U
        JOIN TBL_APARTMENT A ON U.APARTMENT_ID=A.ID
        WHERE U.ID=#{id}
    </select>

    <update id="updatePhoto">
        UPDATE  TBL_USER_PROFILE
        SET USER_PROFILE_NAME=#{userProfileName},USER_PROFILE_PATH=#{userProfilePath}
        WHERE ID=#{id}
    </update>

    <select id="selectPostDetail" resultType="complainDTO">
        SELECT C.ID, C.USER_ID, C.CATEGORY_COMPLAIN_ID, C.COMPLAIN_TITLE, C.COMPLAIN_CONTENT, C.COMPLAIN_DATE, C.COMPLAIN_STATUS, CC.CATEGORY_COMPLAIN_NAME,
         CR.ID AS REPLY_ID, CR.ADMIN_ID,CR.COMPLAIN_REPLY_CONTENT, CR.COMPLAIN_REPLY_DATE
        FROM TBL_COMPLAIN C
        JOIN TBL_CATEGORY_COMPLAIN CC ON C.CATEGORY_COMPLAIN_ID = CC.ID
        LEFT JOIN TBL_COMPLAIN_REPLY CR ON C.ID = CR.COMPLAIN_ID
        WHERE C.ID=#{id}
    </select>

    <delete id="deleteComplain">
        DELETE FROM TBL_COMPLAIN
        WHERE USER_ID=#{id}
    </delete>

    <delete id="deleteFee">
        DELETE FROM TBL_MAINTENANCE_FEE
        WHERE USER_ID=#{id}
    </delete>

    <delete id="deleteLike">
        DELETE FROM TBL_LIKE
        WHERE USER_ID=#{id}
    </delete>

    <delete id="deleteComment">
        DELETE FROM TBL_COMMENT
        WHERE USER_ID=#{id}
    </delete>

    <delete id="deletePost">
        DELETE FROM TBL_POST
        WHERE USER_ID=#{id}
    </delete>

    <delete id="deleteVisit">
        DELETE FROM TBL_VISIT_BOOKING
       WHERE USER_ID=#{id}
    </delete>

    <delete id="deleteUser">
        DELETE FROM TBL_USER
        WHERE ID=#{id}
    </delete>

    <select id="selectVisit" resultType="adminVisitDTO">
        SELECT ROWNUM, ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_REGISTER_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE, USER_DONG, USER_HO, ADMIN_IDENTIFICATION, ADMIN_NAME
        FROM
            (
                SELECT ROWNUM R, ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_REGISTER_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE, USER_DONG, USER_HO, ADMIN_IDENTIFICATION, ADMIN_NAME
                FROM (
                         SELECT
                             V.ID,
                             V.USER_ID,
                             V.APARTMENT_ID,
                             VISIT_BOOKING_START_DATE,
                             VISIT_BOOKING_END_DATE,
                             VISIT_BOOKING_REGISTER_DATE,
                             VISIT_BOOKING_PURPOSE,
                             VISIT_BOOKING_CAR_NUMBER,
                             VISIT_BOOKING_CAR_TYPE,
                             U.USER_DONG, U.USER_HO,
                             AM.ADMIN_IDENTIFICATION,AM.ADMIN_NAME
                         FROM TBL_USER U
                         JOIN TBL_APARTMENT A ON U.APARTMENT_ID = A.ID
                         JOIN TBL_ADMIN AM ON A.ID = AM.APARTMENT_ID
                         JOIN TBL_VISIT_BOOKING V ON U.ID = V.USER_ID
                         WHERE AM.ID = #{id}
                         ORDER BY ID DESC
                     ) AL
    <![CDATA[
                WHERE ROWNUM <= #{pagination.endRow}
            ) AL2
        WHERE AL2.R >=#{pagination.startRow}
        ]]>
    </select>

    <select id="selectTotal" resultType="int">
        SELECT COUNT(V.ID) AS VISIT_BOOKING_COUNT
        FROM TBL_USER U
         JOIN TBL_APARTMENT A ON U.APARTMENT_ID = A.ID
         JOIN TBL_ADMIN AM ON A.ID = AM.APARTMENT_ID
         JOIN TBL_VISIT_BOOKING V ON U.ID = V.USER_ID
        WHERE AM.ID =#{id}
        <if test="searchDTO.visitBookingCarNumber != null and searchDTO.visitBookingCarNumber != ''">
            AND V.VISIT_BOOKING_CAR_NUMBER LIKE '%' || #{searchDTO.visitBookingCarNumber} || '%'
        </if>
        <if test="searchDTO.userDong != null and searchDTO.userDong != ''">
            AND U.USER_DONG LIKE '%' || #{searchDTO.userDong} || '%'
        </if>
        <if test="searchDTO.userHo != null and searchDTO.userHo != ''">
            AND U.USER_HO LIKE '%' || #{searchDTO.userHo} || '%'
        </if>
        <if test="searchDTO.visitBookingStartDate != null and searchDTO.visitBookingStartDate != ''">
            AND V.VISIT_BOOKING_START_DATE &gt;= #{searchDTO.visitBookingStartDate}
        </if>
        <if test="searchDTO.visitBookingEndDate != null and searchDTO.visitBookingEndDate != ''">
            AND V.VISIT_BOOKING_END_DATE &lt;= #{searchDTO.visitBookingEndDate}
        </if>
    </select>

    <delete id="deleteOne">
        DELETE  FROM TBL_VISIT_BOOKING
        WHERE ID=#{id}
    </delete>

    <delete id="deleteComplainReply">
        DELETE FROM TBL_COMPLAIN_REPLY
        WHERE COMPLAIN_ID=#{id}
    </delete>

    <select id="selectId" resultType="Long">
    SELECT R.COMPLAIN_ID AS REPLY_ID FROM TBL_COMPLAIN_REPLY R
    JOIN TBL_COMPLAIN C
    ON R.COMPLAIN_ID=C.ID
    WHERE  C.USER_ID=#{id}
    </select>

    <select id="selectSearch" resultType="searchVisitDTO">
        SELECT ROWNUM, ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_REGISTER_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE, USER_DONG, USER_HO, ADMIN_IDENTIFICATION, ADMIN_NAME
        FROM
          (
            SELECT ROWNUM R, ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_REGISTER_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER, VISIT_BOOKING_CAR_TYPE, USER_DONG, USER_HO, ADMIN_IDENTIFICATION, ADMIN_NAME
              FROM (SELECT V.ID,
                           V.USER_ID,
                           V.APARTMENT_ID,
                           VISIT_BOOKING_START_DATE,
                           VISIT_BOOKING_END_DATE,
                           VISIT_BOOKING_REGISTER_DATE,
                           VISIT_BOOKING_PURPOSE,
                           VISIT_BOOKING_CAR_NUMBER,
                           VISIT_BOOKING_CAR_TYPE,
                           U.USER_DONG,
                           U.USER_HO,
                           AM.ADMIN_IDENTIFICATION,
                           AM.ADMIN_NAME
                            FROM TBL_USER U
                             JOIN TBL_APARTMENT A ON U.APARTMENT_ID = A.ID
                             JOIN TBL_ADMIN AM ON A.ID = AM.APARTMENT_ID
                             JOIN TBL_VISIT_BOOKING V ON U.ID = V.USER_ID
                            WHERE AM.ID = #{id}
                <if test="searchDTO.visitBookingCarNumber != null and searchDTO.visitBookingCarNumber != ''">
                    AND V.VISIT_BOOKING_CAR_NUMBER LIKE '%' || #{searchDTO.visitBookingCarNumber} || '%'
                </if>
                <if test="searchDTO.userDong != null and searchDTO.userDong != ''">
                    AND U.USER_DONG LIKE '%' || #{searchDTO.userDong} || '%'
                </if>
                <if test="searchDTO.userHo != null and searchDTO.userHo != ''">
                    AND U.USER_HO LIKE '%' || #{searchDTO.userHo} || '%'
                </if>
                <if test="searchDTO.visitBookingStartDate != null and searchDTO.visitBookingStartDate != ''">
                    AND V.VISIT_BOOKING_START_DATE &gt;= #{searchDTO.visitBookingStartDate}
                </if>
                <if test="searchDTO.visitBookingEndDate != null and searchDTO.visitBookingEndDate != ''">
                    AND V.VISIT_BOOKING_END_DATE &lt;= #{searchDTO.visitBookingEndDate}
                </if>
                    ORDER BY ID DESC
                    ) AL
    <![CDATA[
              WHERE ROWNUM <= #{pagination.endRow}) AL2
         WHERE AL2.R >= #{pagination.startRow}
        ]]>
    </select>

    <select id="selectHo" resultType="Long">
        SELECT ID FROM TBL_USER
        WHERE USER_DONG=#{userDong} AND USER_HO=#{userHo} AND APARTMENT_ID=#{apartmentId}
    </select>

  <insert id="insertAdminBooking">
      INSERT INTO TBL_VISIT_BOOKING(ID, USER_ID, APARTMENT_ID, VISIT_BOOKING_START_DATE, VISIT_BOOKING_END_DATE, VISIT_BOOKING_PURPOSE, VISIT_BOOKING_CAR_NUMBER)
      VALUES (SEQ_VISIT_RESERVATION.NEXTVAL, #{userId}, #{apartmentId}, TO_DATE(#{visitBookingStartDate}, 'YYYY-MM-DD'), TO_DATE(#{visitBookingEndDate}, 'YYYY-MM-DD'), #{visitBookingPurpose}, #{visitBookingCarNumber})
  </insert>

<delete id="deleteBooking">
    DELETE FROM TBL_VISIT_BOOKING
    WHERE ID=#{id}
</delete>

    <select id="selectProfileId" resultType="Long">
        SELECT USER_PROFILE_ID FROM TBL_USER
        WHERE ID=#{id}
    </select>

    <delete id="deleteProfile">
        DELETE FROM TBL_USER_PROFILE
        WHERE ID=#{id}
    </delete>

</mapper>